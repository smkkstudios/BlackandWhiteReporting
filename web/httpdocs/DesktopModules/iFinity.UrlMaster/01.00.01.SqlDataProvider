/************************************************************/
/*****              SQLDataProvider		                *****/
/*****              iFinity.Url Master 1.00.01			*****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}	*****/
/************************************************************/


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[ifty_TabRedirect]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[ifty_TabRedirect](
	[TabId] [int] NOT NULL,
	[SeqNum] [int] NOT NULL,
	[Url] [nvarchar](200) NOT NULL,
	[HttpStatus] [nvarchar](50) NOT NULL,
	[RedirectTabId] [int] NULL,
 CONSTRAINT [PK_ifty_TabRedirect] PRIMARY KEY CLUSTERED 
(
	[TabId] ASC,
	[SeqNum] ASC
)
) 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[ifty_AddTabRedirect]') AND type in (N'P', N'PC'))
BEGIN
EXEC sp_executesql @statement = N'
CREATE Procedure {databaseOwner}[ifty_AddTabRedirect]
(
	 @TabId		int 
	,@SeqNum		int OUTPUT
	,@Url		nvarchar(400)
	,@HttpStatus		nvarchar(100)
	,@RedirectTabId		int 
)
AS
BEGIN

/* =============================================
	Author:      WOMBAT\Bruce
	Create date: 12/02/2008
	Description: Adds a ifty_TabRedirect record
   ============================================= 
	
	    Return Values
	    0  - Successful Execution.
	    1  - SQL Error. Rollback Occurred.
	    2  - No records modified. Rollback Occurred.
	    3  - No records modified. Commit Occured
	    4  - Error in sub procedure - entire top procedure rolled back.
	    5  - No record(s) returned. Procedure Executed Ok.
	    6+ - Specific to procedure
	
	    Modified by:		Date:		Reason for Modification:
	
	   =============================================*/

SET NOCOUNT ON 
DECLARE @ErrStr 	varchar(100)	/* Return error string				*/
DECLARE @Error		int		/* Return error value				*/
DECLARE @Rowcount	int		/* Return related row count			*/
DECLARE @TranCount  int     /* Keeps a record of the transaction count */
DECLARE @CurUser    varChar(15)
       ,@CurTime	dateTime
SELECT @CurUser = Current_User
      ,@CurTime = GetDate()

SELECT @TranCount = @@TRANCOUNT
IF @TranCount = 0 BEGIN TRANSACTION T1

	--auto sequence if not present
	if (@SeqNum < 1)
	BEGIN
		SELECT @SeqNum = COALESCE(Max(SeqNum),0) + 1
		FROM ifty_TabRedirect
		WHERE TabId = @TabId
	END

	INSERT INTO ifty_TabRedirect(
		  TabId
		 ,SeqNum
		 ,Url
		 ,HttpStatus
		 ,RedirectTabId
	) VALUES (
		  @TabId
		 ,@SeqNum
		 ,@Url
		 ,@HttpStatus
		 ,@RedirectTabId
	)

	
	SELECT @Error = @@ERROR, @RowCount = @@RowCount
	IF @Error <> 0
	BEGIN
		IF @TranCount = 0 ROLLBACK TRANSACTION T1
		SELECT @ErrStr=''Error in ''+ OBJECT_NAME(@@PROCID) + ''. Stmt No.=1, Db=''+db_name()+'',Err=''+CONVERT(varchar(10),@Error)
		RAISERROR(@ErrStr,16,1)
		RETURN 1 /* statement failed */
	END
	/* finished procedure, commit and return */
	IF @TranCount = 0 COMMIT TRANSACTION T1
	IF @RowCount = 0
		RETURN 3	  /*** Procedure did nothing. Records committed */
	ELSE
		RETURN 0	  /*** Procedure executed ok. Records committed */
END


' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[ifty_UpdateTabRedirect]') AND type in (N'P', N'PC'))
BEGIN
EXEC sp_executesql @statement = N'CREATE Procedure {databaseOwner}[ifty_UpdateTabRedirect]
(
	 @TabId		int 
	,@SeqNum		int 
	,@Url		nvarchar(400)
	,@HttpStatus		nvarchar(100)
	,@RedirectTabId		int 
)
AS
BEGIN

/* =============================================
	Author:      WOMBAT\Bruce
	Create date: 12/02/2008
	Description: Updates a ifty_TabRedirect record
   ============================================= 
	
	    Return Values
	    0  - Successful Execution.
	    1  - SQL Error. Rollback Occurred.
	    2  - No records modified. Rollback Occurred.
	    3  - No records modified. Commit Occured
	    4  - Error in sub procedure - entire top procedure rolled back.
	    5  - No record(s) returned. Procedure Executed Ok.
	    6+ - Specific to procedure
	
	    Modified by:		Date:		Reason for Modification:
	
	   =============================================*/

SET NOCOUNT ON 
DECLARE @ErrStr 	varchar(100)	/* Return error string				*/
DECLARE @Error		int		/* Return error value				*/
DECLARE @Rowcount	int		/* Return related row count			*/
DECLARE @TranCount  int     /* Keeps a record of the transaction count */
DECLARE @CurUser    varChar(15)
       ,@CurTime	dateTime
SELECT @CurUser = Current_User
      ,@CurTime = GetDate()

SELECT @TranCount = @@TRANCOUNT
IF @TranCount = 0 BEGIN TRANSACTION T1

	UPDATE ifty_TabRedirect
	Set TabId	 = 	@TabId
	  ,SeqNum	 = 	@SeqNum
	  ,Url	 = 	@Url
	  ,HttpStatus	 = 	@HttpStatus
	  ,RedirectTabId	 = 	@RedirectTabId
	WHERE TabId = @TabId
	   AND SeqNum = @SeqNum

	
	SELECT @Error = @@ERROR, @RowCount = @@RowCount
	IF @Error <> 0
	BEGIN
		IF @TranCount = 0 ROLLBACK TRANSACTION T1
		SELECT @ErrStr=''Error in ''+ OBJECT_NAME(@@PROCID) + ''. Stmt No.=1, Db=''+db_name()+'',Err=''+CONVERT(varchar(10),@Error)
		RAISERROR(@ErrStr,16,1)
		RETURN 1 /* statement failed */
	END
	/* finished procedure, commit and return */
	IF @TranCount = 0 COMMIT TRANSACTION T1
	IF @RowCount = 0
		RETURN 3	  /*** Procedure did nothing. Records committed */
	ELSE
		RETURN 0	  /*** Procedure executed ok. Records committed */
END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[ifty_DeleteTabRedirect]') AND type in (N'P', N'PC'))
BEGIN
EXEC sp_executesql @statement = N'Create Procedure {databaseOwner}[ifty_DeleteTabRedirect]
(
	 @TabId		int 
	,@SeqNum		int 
)
AS
BEGIN

/* =============================================
	Author:      WOMBAT\Bruce
	Create date: 12/02/2008
	Description: Deletes a ifty_TabRedirect record
   ============================================= 
	
	    Return Values
	    0  - Successful Execution.
	    1  - SQL Error. Rollback Occurred.
	    2  - No records modified. Rollback Occurred.
	    3  - No records modified. Commit Occured
	    4  - Error in sub procedure - entire top procedure rolled back.
	    5  - No record(s) returned. Procedure Executed Ok.
	    6+ - Specific to procedure
	
	    Modified by:		Date:		Reason for Modification:
	
	   =============================================*/

SET NOCOUNT ON 
DECLARE @ErrStr 	varchar(100)	/* Return error string				*/
DECLARE @Error		int		/* Return error value				*/
DECLARE @Rowcount	int		/* Return related row count			*/

	DELETE FROM ifty_TabRedirect
	WHERE TabId = @TabId
	   AND SeqNum = @SeqNum

	
	SELECT @Error = @@ERROR, @RowCount = @@RowCount
	IF @Error <> 0
	BEGIN
		SELECT @ErrStr=''Error in ''+ OBJECT_NAME(@@PROCID) + ''. Stmt No.=1, Db=''+db_name()+'',Err=''+CONVERT(varchar(10),@Error)
		RAISERROR(@ErrStr,16,1)
		RETURN 1 /* statement failed */
	END
	/* finished procedure, return value and exit */
	RETURN 0	  /*** Procedure executed ok. */
END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[ifty_GetTabRedirectsForTab]') AND type in (N'P', N'PC'))
BEGIN
EXEC sp_executesql @statement = N'Create Procedure {databaseOwner}[ifty_GetTabRedirectsForTab]
(
	 @TabId		int 
)
AS
BEGIN

/* =============================================
	Author:      WOMBAT\Bruce
	Create date: 13/02/2008
	Description: Gets a ifty_TabRedirect record
   ============================================= 
	
	    Return Values
	    0  - Successful Execution.
	    1  - SQL Error. Rollback Occurred.
	    2  - No records modified. Rollback Occurred.
	    3  - No records modified. Commit Occured
	    4  - Error in sub procedure - entire top procedure rolled back.
	    5  - No record(s) returned. Procedure Executed Ok.
	    6+ - Specific to procedure
	
	    Modified by:		Date:		Reason for Modification:
	
	   =============================================*/

SET NOCOUNT ON 
DECLARE @ErrStr 	varchar(100)	/* Return error string				*/
DECLARE @Error		int		/* Return error value				*/
DECLARE @Rowcount	int		/* Return related row count			*/

	SELECT 
	    TabId	
	   ,SeqNum	
	   ,Url	
	   ,HttpStatus	
	   ,RedirectTabId	
	FROM ifty_TabRedirect
	WHERE TabId = @TabId
	
	SELECT @Error = @@ERROR, @RowCount = @@RowCount
	IF @Error <> 0
	BEGIN
		SELECT @ErrStr=''Error in ''+ OBJECT_NAME(@@PROCID) + ''. Stmt No.=1, Db=''+db_name()+'',Err=''+CONVERT(varchar(10),@Error)
		RAISERROR(@ErrStr,16,1)
		RETURN 1 /* statement failed */
	END
	/* finished procedure, return value and exit */
	RETURN 0	  /*** Procedure executed ok. */
END

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[ifty_GetTabsAndRedirects]') AND type in (N'P', N'PC'))
BEGIN
EXEC sp_executesql @statement = N'
CREATE Procedure {databaseOwner}[ifty_GetTabsAndRedirects]
(
	 @portalId		int 
	,@includeAdminPages  bit
	,@includeHostPages   bit
)
AS
BEGIN

/* =============================================
	Author:      WOMBAT\Bruce
	Create date: 13/02/2008
	Description: Gets all tabs and ifty_TabRedirect records
   ============================================= 
	
	    Return Values
	    0  - Successful Execution.
	    1  - SQL Error. Rollback Occurred.
	    2  - No records modified. Rollback Occurred.
	    3  - No records modified. Commit Occured
	    4  - Error in sub procedure - entire top procedure rolled back.
	    5  - No record(s) returned. Procedure Executed Ok.
	    6+ - Specific to procedure
	
	    Modified by:		Date:		Reason for Modification:
	
	   =============================================*/

SET NOCOUNT ON 
DECLARE @ErrStr 	varchar(100)	/* Return error string				*/
DECLARE @Error		int		/* Return error value				*/
DECLARE @Rowcount	int		/* Return related row count			*/

	Select *
	From {objectQualifier}Tabs
	Where ((@portalId = PortalId OR (PortalId is NULL and @includeHostPages = 1))
	    OR (@portalId = -1 AND ((PortalID is NOT NULL and @includeHOstPages = 0) 
	    OR  @includeHostPages = 1)))
		/* admin tabs */
	  AND ((taBorder between 10000 and 10050 and @includeAdminPages = 1)
	   OR (taBorder NOT between 10000 and 10050))
	ORDER BY PortalId, TabOrder

	SELECT @Error = @@ERROR, @RowCount = @@RowCount
	IF @Error <> 0
	BEGIN
		SELECT @ErrStr=''Error in ''+ OBJECT_NAME(@@PROCID) + ''. Stmt No.=1, Db=''+db_name()+'',Err=''+CONVERT(varchar(10),@Error)
		RAISERROR(@ErrStr,16,1)
		RETURN 1 /* statement failed */
	END

	SELECT 
	    tr.TabId	
	   ,tr.SeqNum	
	   ,tr.Url	
	   ,tr.HttpStatus	
	   ,tr.RedirectTabId	
	FROM {databaseOwner}ifty_TabRedirect tr
	INNER JOIN {objectQualifier}Tabs t
		on t.TabId = tr.TabId
	WHERE (@portalId = PortalId OR @portalId = -1)
	  AND ((taBorder between 10000 and 10050 and @includeAdminPages = 1)
	   OR (taBorder NOT between 10000 and 10050))
	ORDER BY PortalId, TabOrder, SeqNum

	SELECT @Error = @@ERROR, @RowCount = @@RowCount
	IF @Error <> 0
	BEGIN
		SELECT @ErrStr=''Error in ''+ OBJECT_NAME(@@PROCID) + ''. Stmt No.=2, Db=''+db_name()+'',Err=''+CONVERT(varchar(10),@Error)
		RAISERROR(@ErrStr,16,1)
		RETURN 1 /* statement failed */
	END
	/* finished procedure, return value and exit */
	RETURN 0	  /*** Procedure executed ok. */
END


' 
END
