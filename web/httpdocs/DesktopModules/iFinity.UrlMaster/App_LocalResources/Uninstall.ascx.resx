<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Email.Text" xml:space="preserve">
    <value>[Optional] Please supply an email address so we can address any issues in your feedback and notify you of future upgrades and releases of the module.  You won't get Spam and you can opt out of any communications in the future.</value>
  </data>
  <data name="EmailBody.Text" xml:space="preserve">
    <value>The following feedback was submitted about the Url Master module:&lt;div&gt;[MESSAGE]&lt;/div&gt;</value>
  </data>
  <data name="EmailFooter.Text" xml:space="preserve">
    <value>Sent [DATETIME]</value>
  </data>
  <data name="EmailHeader.Text" xml:space="preserve">
    <value>&lt;style type='text/css'&gt;body {font-family:Tahoma, Verdana;font-size:10px;}&lt;/style&gt;</value>
  </data>
  <data name="EmailIntro.Text" xml:space="preserve">
    <value>Feedback submitted from [PAGEURL]</value>
  </data>
  <data name="EmailSubject.Text" xml:space="preserve">
    <value>Feedback from [[WEBSITEURL]]</value>
  </data>
  <data name="Feedback.Text" xml:space="preserve">
    <value>Please tell us why you're uninstalling the module.  Did it not work correctly?  Is there a feature missing? Did you have problems understanding the features, or perhaps love it but can't use it?  We thrive on feedback and take suggestions seriously.  Please take the time to provide some feedback.</value>
  </data>
  <data name="ModuleDefinition.Text" xml:space="preserve">
    <value>Go To Extensions Page</value>
  </data>
  <data name="ModuleDefinition6.Text" xml:space="preserve">
    <value>Uninstall Module</value>
  </data>
  <data name="NoFeedback.Text" xml:space="preserve">
    <value>Please either send feedback or click on 'No Thanks' before removing the Configuration.</value>
  </data>
  <data name="NoThanks.Text" xml:space="preserve">
    <value>No Thanks</value>
  </data>
  <data name="RemoveConfiguration.Text" xml:space="preserve">
    <value>Remove Url Master Configuration</value>
  </data>
  <data name="SendFeedback.Text" xml:space="preserve">
    <value>Send Feedback</value>
  </data>
  <data name="Status.Text" xml:space="preserve">
    <value>Current Module Installation Status</value>
  </data>
  <data name="StatusInstalled.Text" xml:space="preserve">
    <value>Url Master is Currently Active</value>
  </data>
  <data name="StatusUninstalled.Text" xml:space="preserve">
    <value>Url Master is Not Currently Active</value>
  </data>
  <data name="StepOne.Help" xml:space="preserve">
    <value>This module has many features that are a direct result of feedback from customers like you who take the time to provide both the positives and negatives on their experience.   Please take a few seconds to fill out the feedback box and influence the future development of this module.</value>
  </data>
  <data name="StepOne.Text" xml:space="preserve">
    <value>Step 1 : Send Feedback.</value>
  </data>
  <data name="StepThree.Help" xml:space="preserve">
    <value>Follow this link to proceed to the DotNetNuke Extensions page.  In this linked page, you will be able to use the Uninstall option to uninstall the module.</value>
  </data>
  <data name="StepThree.Text" xml:space="preserve">
    <value>Step 3 : Proceed to the Host-&gt;Extensions page to Uninstall</value>
  </data>
  <data name="StepTwo.Help" xml:space="preserve">
    <value>This module uses information in the site configuration file to keep track of options and settings.  This data must be removed before the module is uninstalled.  Use the 'Remove Url Master Configuration' button before continuing onto the Uninstall process.</value>
  </data>
  <data name="StepTwo.Text" xml:space="preserve">
    <value>Step 2 : Remove Configuration</value>
  </data>
  <data name="UninstallInstructions.Text" xml:space="preserve">
    <value>On the Extensions Page, click on the 'Uninstall' link for the Url Master module.  This will remove the module from this installation</value>
  </data>
  <data name="UninstallInstructions6.Text" xml:space="preserve">
    <value>Click on the 'Uninstall Link' when the Uninstall popup opens.</value>
  </data>
</root>